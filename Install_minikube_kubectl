In order to get a touch and feel of kubernetes in your laptop we need three tools installed on it to the minimum

1. Minikube
2. Kubectl
3. Virtualbox or Hyper-V. It can also be used with Docker (Windows 10 & MacOS & Some Linux distributions)

Minikube is the name of a go program that builds a Kubernetes cluster in a single host with a set of small
resources to run a small kubernetes deployment. It is meant for testing scenarios of kubernetes (creating pods, services, managing storage,
network ingress rules, etc) but in the local environment for the developer or administrator to test. It's not meant for production use,
since it runs a virtual box, installs Docker and then deploys the essential kubernetes containers.

Kubectl is the command line interface for Kubernetes. From kubectl you can manage a big majority of the kubernetes resources.
Kubectl exposes sub commands for each part of the cluster. The CLI calls Kubernetes API server to modify the desired state or
query the current state of the cluster. The desired state might be modified to ask for more replicas for a deployment,
add a volume to a persistent volume claim, add a network ingress route to access a service through a url.
The current state might be queried by checking a deployment status, getting logs on a service replica or simply just
getting information about recourse usage like cpu, ram etc.

Git Repo: https://github.com/kubernetes/minikube

https://kubernetes.io/docs/setup/minikube/

https://kubernetes.io/docs/tasks/tools/install-minikube/

https://kubernetes.io/docs/tasks/tools/install-kubectl/

On Ubuntu:

https://linuxhint.com/install-minikube-ubuntu/

On Windows 10

https://medium.com/@JockDaRock/minikube-on-windows-10-with-hyper-v-6ef0f4dc158c

On MacOS

https://hackernoon.com/local-kubernetes-setup-with-minikube-on-mac-os-x-eeeb1cbdc0b

On CentOS

https://www.xtivia.com/minikube-install-guide-centos/
